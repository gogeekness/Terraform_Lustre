### main Lustre playbook
---
# Main Lustre Playbook

- name: Setup Lustre on test servers 
  hosts: all
  become: true
  become_user: ec2-user
  gather_facts: false

  # stop ansible from hanging
  any_errors_fatal: true
  # stop ansible if can not log on.
  ignore_unreachable: true

  #### set roles for playbook
  ## update python to python3.8
  roles:
    - role: Set_SSH_Vars

  vars:
    data_device_name: "/dev/xvdd"  # Lust
    lustre_device_name: "dev/xvdz" # ZFS drive for Lustre
    lustre_pool_name: "Lust_pool"
    mount_point: "/mnt/data"
    ansible_command_timeout: 60  # timeout if ansible gets stuck

  pre_tasks:
  
  ### Set vault file and fetch secret vars from it
    - name: Include vault
      ansible.builtin.include_vars:
        file: Terraform_Vault

  tasks:
    ### I need to key to be on the bastion host so it can copy file to the other servers.
    - name: Copy ssh-key to non-bastion hosts
      ansible.builtin.copy:
        src: "{{ ssh_key_location }}"
        dest: "/home/ec2-user/.ssh/lustretest"
        owner: ec2-user
        mode: '0600'
      when: inventory_hostname != bastion_host

    ### shwo Current IP ans host status
    - name: Print Public IP Address
      debug:
        msg:
          - "Public IP of {{ inventory_hostname }} is {{ hostvars[inventory_hostname]['public_ip_address'] }}"
          - "Ansible Play hosts {{ ansible_play_hosts }}"
          - "Ansible Private_ip_address {{ hostvars[inventory_hostname]['private_ip_address'] }}"
      ignore_errors: true

    - name: Print SSH connection details
      debug:
        msg: "Connecting to {{ inventory_hostname }} via {{ ansible_host }} \
          using {{ ansible_ssh_common_args | default('No SSH args set')  }}"
      ignore_errors: true

    - name: install and set up squid proxy for trhe Bastion/client
      when: inventory_hostname == bastion_host
      block:
        - name: Install squid proxy on bastion
          ansible.builtin.dnf:
            name: 
              - squid
            state: present
          async: 60
          poll: 60

        ### to install packages on the servers behind the bastion/client I need to set dnf to use the bastion as a proxy.
        - name: define squi.conf
          ansible.builtin.tempfile:
            src: squid_conf.j2
            dest: /etc/squid/squid.conf
            force: ture

        ### might need sudo for systemctl
        - name: Run command to enable squid
          ansible.builtin.command: systemctl enable --now squid

      become: yes
      become_user: root
      ### Block Ende 


    - name: block - edit dnf file on internal servers
      block: 
        ### to install packages on the servers behind the bastion/client I need to set dnf to use the bastion as a proxy.
        - name: Add proxy data to dnf.config to other servers
          ansible.builtin.lineinfile:
            path: /etc/dnf/dnf.conf 
            line: "proxy=http://{{ ec2_public_ip }}:3128" 
          when: inventory_hostname != bastion_host
      become: yes
      become_user: root

    ### Test raw command and gain pyhton3 information as that became an issue with Ansible
    - name: Get Python version
      ansible.builtin.shell: "echo $(python3 --version)" 
      register: python_ver

    ### Test raw command to find if the dnf.conf is changed correctly
    - name: cat dnf.conf
      ansible.builtin.shell: "echo $(cat /etc/dnf/dnf.conf)" 
      register: dnf_conf
      become: yes
      become_user: root


    ## After updating python test to work.
    - name: show python and dnf.conf version
      ansible.builtin.debug:
        msg:
          - "Python version: {{ python_ver.stdout}}" 
          - "dnf config file: {{ dnf_conf.stdout }}"
        

    - name: Install common packages
      become: true
      become_user: root
      ansible.builtin.dnf:
        name: 
          - util-linux
          - xfsprogs
          - nano
          - openssh
        state: present
      async: 60
      poll: 60

        

  # ### set the three servers with data drives
  #   - name: Create mount points for data drives
  #     file:
  #       path: "{{ data_device_name }}"
  #       state: directory
  #       mode: '0755'
  #     with_sequence: start=1 end=3

  #   - name: Create filesystem on EBS volume
  #     filesystem:
  #       fstype: ext4
  #       dev: "{{ data_device_name }}"
  #     when: device_name is defined

  #   - name: Create mount directory
  #     file:
  #       path: "{{ mount_point }}"
  #       state: directory
  #       mode: '0755'

  #   - name: Mount EBS volume
  #     mount:
  #       path: "{{ mount_point }}"
  #       src: "{{ device_name }}"
  #       fstype: ext4
  #       state: mounted

  #   - name: Add SSH private key to point connection server
  #     copy:
  #       content: "{{ lookup('env', 'SSH_PRIVATE_KEY') }}"
  #       dest: "/home/reseke/.ssh/id_rsa"
  #       owner: rdeseke_aws1
  #       group: rdeseke_aws1
  #       mode: '0600'
  #     when: lookup('env', 'SSH_PRIVATE_KEY') is defined